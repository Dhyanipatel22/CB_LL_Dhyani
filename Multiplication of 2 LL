 public static ListNode multiplyLinkedListWithDigit(ListNode l1, int digit) {
        ListNode head = new ListNode(-1); // dummy.
        ListNode curr = head;

        int carry = 0;
        while (l1 != null || carry != 0) {
            int sum = carry + (l1 != null ? (l1.val * digit) : 0);

            carry = sum / 10;
            sum = sum % 10;

            curr.next = new ListNode(sum);

            if (l1 != null)
                l1 = l1.next;
            curr = curr.next;
        }

        return head.next;
    }

    public static ListNode multiplyTwoLL(ListNode l1, ListNode l2) {
        l1 = reverseList(l1);
        l2 = reverseList(l2);

        ListNode ans = new ListNode(-1); // dummy.
        ListNode ans_itr = ans;
        ListNode l2_itr = l2;

        while (l2_itr != null) {
            ListNode head = multiplyLinkedListWithDigit(l1, l2_itr.val);
            l2_itr = l2_itr.next;
            addTwoLinkedList(ans_itr,head);
            ans_itr = ans_itr.next;
        }
        
        ans = ans.next;
        return reverseList(ans);
    }
